@model TheConnoisseur.Models.SearchViewModel

@{
    ViewBag.Title = "Search";
}

<h2>Search</h2>
<hr />

@using (Html.BeginForm("Search", "Search", "POST"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <div class="form-group">
            @Html.Label("Word or phrase:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SearchTerm, new { htmlAttributes = new { @class = "form-control", @required = "true" } })
                @Html.ValidationMessageFor(model => model.SearchTerm, "", new { htmlAttributes = new { @class = "col-md-2 text-warning" } })

            </div>
        </div>

        <div class="form-group">
            @Html.Label("For:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SearchType, (IEnumerable<SelectListItem>)ViewBag.Types, "Select ...", new { @class = "form-control", @required = "true" })
                @Html.ValidationMessageFor(model => model.SearchType, "", new { htmlAttributes = new { @class = "col-md-2 text-warning" } })

            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@* Ensure model is valid before calling partialview controller method. *@
@if (IsPost)
{
    if (ViewData.ModelState.IsValid)
    {
        if (Model.SearchType == "Author")
        {
            @Html.Action("ResultAuthor", new { searchTerm = Model.SearchTerm })
        }
        else if (Model.SearchType == "Beer")
        {
            @Html.Action("ResultBeer", new { searchTerm = Model.SearchTerm })
        }@*
        else if (Model.SearchType == "Coffee")
        {
            @Html.Action("ResultCoffee", new { searchTerm = Model.SearchTerm })
        }*@
    }
}